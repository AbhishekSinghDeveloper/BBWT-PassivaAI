// <auto-generated />
using System;
using BBWM.Demo.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BBWM.Demo.Data.Migrations.SqlServer
{
    [DbContext(typeof(SqlServerDemoDataContext))]
    [Migration("20210728060414_RemoveColorModel")]
    partial class RemoveColorModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BBWM.Demo.ComplexData.Model.ComplexData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ControlsId")
                        .HasColumnType("int");

                    b.Property<int?>("HomeAddressId")
                        .HasColumnType("int");

                    b.Property<int?>("MoreDetailsId")
                        .HasColumnType("int");

                    b.Property<int?>("UserDetailsId")
                        .HasColumnType("int");

                    b.Property<int?>("WorkDetailsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ControlsId");

                    b.HasIndex("HomeAddressId");

                    b.HasIndex("MoreDetailsId");

                    b.HasIndex("UserDetailsId");

                    b.HasIndex("WorkDetailsId");

                    b.ToTable("ComplexData");
                });

            modelBuilder.Entity("BBWM.Demo.ComplexData.Model.ComplexDataControls", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("CheckBox1")
                        .HasColumnType("bit");

                    b.Property<bool>("CheckBox2")
                        .HasColumnType("bit");

                    b.Property<bool>("CheckBox3")
                        .HasColumnType("bit");

                    b.Property<bool>("CheckBox4")
                        .HasColumnType("bit");

                    b.Property<bool>("CheckBox5")
                        .HasColumnType("bit");

                    b.Property<string>("InputBox1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InputBox10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InputBox2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InputBox3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InputBox4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InputBox5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InputBox6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InputBox7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InputBox8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InputBox9")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Selected1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ComplexDataControls");
                });

            modelBuilder.Entity("BBWM.Demo.ComplexData.Model.ComplexDataHomeAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressLine1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Town")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ComplexDataHomeAddresses");
                });

            modelBuilder.Entity("BBWM.Demo.ComplexData.Model.ComplexDataMoreDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsCustomer")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDemo")
                        .HasColumnType("bit");

                    b.Property<bool>("IsManagement")
                        .HasColumnType("bit");

                    b.Property<int>("SelectedTaskId")
                        .HasColumnType("int");

                    b.Property<int>("SelectedWorkTime")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SelectedTaskId");

                    b.ToTable("ComplexDataMoreDetails");
                });

            modelBuilder.Entity("BBWM.Demo.ComplexData.Model.ComplexDataUserDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ComplexDataUserDetails");
                });

            modelBuilder.Entity("BBWM.Demo.ComplexData.Model.ComplexDataWorkDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("OfficeWorkId")
                        .HasColumnType("int");

                    b.Property<int?>("RemoteWorkId")
                        .HasColumnType("int");

                    b.Property<string>("ReportCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SelectedIssueId")
                        .HasColumnType("int");

                    b.Property<int>("SelectedWorkType")
                        .HasColumnType("int");

                    b.Property<bool>("ShowWorkingData")
                        .HasColumnType("bit");

                    b.Property<string>("WorkDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OfficeWorkId");

                    b.HasIndex("RemoteWorkId");

                    b.HasIndex("SelectedIssueId");

                    b.ToTable("ComplexDataWorkDetails");
                });

            modelBuilder.Entity("BBWM.Demo.ComplexData.Model.ComplexOfficeWork", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressLine1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Town")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ComplexOfficeWork");
                });

            modelBuilder.Entity("BBWM.Demo.ComplexData.Model.ComplexRemoteWork", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanySkype")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsUK")
                        .HasColumnType("bit");

                    b.Property<string>("PersonalEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonalSkype")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ComplexRemoteWork");
                });

            modelBuilder.Entity("BBWM.Demo.ComplexData.Model.TasksIssues", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("TasksIssues");
                });

            modelBuilder.Entity("BBWM.Demo.Guidelines.File", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Expanded")
                        .HasColumnType("bit");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("BBWM.Demo.Northwind.Model.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("BBWM.Demo.Northwind.Model.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobRole")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RegistrationDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("BBWM.Demo.Northwind.Model.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CustomerCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("RequiredDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("ShippedDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("CustomerCode");

                    b.HasIndex("CustomerId");

                    b.HasIndex("OrderDate");

                    b.HasIndex("RequiredDate");

                    b.HasIndex("ShippedDate");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BBWM.Demo.Northwind.Model.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsReseller")
                        .HasColumnType("bit");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("BBWM.Demo.Northwind.Model.Organization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("BBWM.Demo.Northwind.Model.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("BBWM.Demo.ComplexData.Model.ComplexData", b =>
                {
                    b.HasOne("BBWM.Demo.ComplexData.Model.ComplexDataControls", "Controls")
                        .WithMany()
                        .HasForeignKey("ControlsId");

                    b.HasOne("BBWM.Demo.ComplexData.Model.ComplexDataHomeAddress", "HomeAddress")
                        .WithMany()
                        .HasForeignKey("HomeAddressId");

                    b.HasOne("BBWM.Demo.ComplexData.Model.ComplexDataMoreDetails", "MoreDetails")
                        .WithMany()
                        .HasForeignKey("MoreDetailsId");

                    b.HasOne("BBWM.Demo.ComplexData.Model.ComplexDataUserDetails", "UserDetails")
                        .WithMany()
                        .HasForeignKey("UserDetailsId");

                    b.HasOne("BBWM.Demo.ComplexData.Model.ComplexDataWorkDetails", "WorkDetails")
                        .WithMany()
                        .HasForeignKey("WorkDetailsId");
                });

            modelBuilder.Entity("BBWM.Demo.ComplexData.Model.ComplexDataMoreDetails", b =>
                {
                    b.HasOne("BBWM.Demo.ComplexData.Model.TasksIssues", "SelectedTask")
                        .WithMany()
                        .HasForeignKey("SelectedTaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BBWM.Demo.ComplexData.Model.ComplexDataWorkDetails", b =>
                {
                    b.HasOne("BBWM.Demo.ComplexData.Model.ComplexOfficeWork", "OfficeWork")
                        .WithMany()
                        .HasForeignKey("OfficeWorkId");

                    b.HasOne("BBWM.Demo.ComplexData.Model.ComplexRemoteWork", "RemoteWork")
                        .WithMany()
                        .HasForeignKey("RemoteWorkId");

                    b.HasOne("BBWM.Demo.ComplexData.Model.TasksIssues", "SelectedIssue")
                        .WithMany()
                        .HasForeignKey("SelectedIssueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BBWM.Demo.Guidelines.File", b =>
                {
                    b.HasOne("BBWM.Demo.Guidelines.File", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("BBWM.Demo.Northwind.Model.Order", b =>
                {
                    b.HasOne("BBWM.Demo.Northwind.Model.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("BBWM.Demo.Northwind.Model.OrderDetail", b =>
                {
                    b.HasOne("BBWM.Demo.Northwind.Model.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BBWM.Demo.Northwind.Model.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
